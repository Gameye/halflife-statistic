version: 2

jobs:
  prepare:
    docker: &docker_node
      - image: circleci/node:8
    steps:
      - checkout
      - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
      - restore_cache:
          key: npm-
      - run: npm install
      - run: npm install tap-junit
      - save_cache:
          key: npm-{{ .Revision }}
          paths:
            - ~/.npm
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - node
            - module
            - types
            - pub

  lint:
    docker: *docker_node
    steps:
      - checkout
      - attach_workspace: &attach_workspace
          at: .
      - run: npm run lint

  spec:
    docker: *docker_node
    steps:
      - checkout
      - attach_workspace: *attach_workspace
      - run: npm run spec-all | $(npm bin)/tap-junit --output "/tmp/test-results/spec"
      - store_test_results: &store_test_results
          path: /tmp/test-results

  feature:
    docker: *docker_node
    steps:
      - checkout
      - attach_workspace: *attach_workspace
      - run: mkdir -p "/tmp/test-results/feature"
      - run: npm run feature-all -- -- --format "json:/tmp/test-results/feature/feature.cucumber"
      - store_test_results: *store_test_results

  publish:
    docker: *docker_node
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
      - run: npm version ${CIRCLE_TAG}
      - run: npm publish

  deploy-production:
    docker:
      - image: circleci/python:3.6
        environment:
          BUCKET: private.gameye.com
    steps: &steps_deploy
      - attach_workspace: *attach_workspace
      - restore_cache: &restore_cache_pip
          key: pip-
      - run: pip install awscli --user
      - save_cache: &save_cache_pip
          key: pip-{{ .Revision }}
          paths:
            - ~/.cache/pip
      - run: >
          ~/.local/bin/aws s3 cp
          pub/
          s3://$BUCKET/statistic/$CIRCLE_PROJECT_REPONAME/
          --recursive
          --cache-control no-cache

  deploy-staging:
    docker:
      - image: circleci/python:3.6
        environment:
          BUCKET: private.gameye.org
    steps: *steps_deploy

workflows:
  version: 2
  main:
    jobs:
      - prepare:
          context: npm-authorized
          filters: &filter_all
            tags:
              only: /.*?/
      - lint:
          requires: [prepare]
          filters: *filter_all
      - spec:
          requires: [prepare]
          filters: *filter_all
      - feature:
          requires: [prepare]
          filters: *filter_all

      - deploy-production:
          context: aws-authorized
          requires: [lint, spec, feature]
          filters: &filters_production
            branches:
              ignore: /.*?/
            # v1.0.0
            tags:
              only: /^v\d+\.\d+\.\d+$/

      - deploy-staging:
          context: aws-authorized
          requires: [lint, spec, feature]
          filters: &filters_staging
            branches:
              ignore: /.*?/
            # v1.0.0-1 / v1.0.0
            tags:
              only: /^v\d+\.\d+\.\d+(\-\d+)?$/

      - publish-node:
          context: npm-authorized
          requires: [lint, spec, feature]
          filters:
            branches:
              ignore: /.*?/
            tags:
              # v1.0.0-1 / v1.0.0-pre1 / v1.0.0
              only: /^v\d+\.\d+\.\d+(\-.+)?$/
